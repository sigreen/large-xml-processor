<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <camelContext id="camelContext-68750da5-b95d-4282-80bd-3488dc2db6d1" xmlns="http://camel.apache.org/schema/spring">
        <!-- lets parse files, transform them with XQuery and send them to JMS -->
        <route id="process-batch-file">
            <from id="_from1" uri="file:src/data?noop=true"/>
            <log id="_log1" message="Transforming input file ${header.CamelFileName}"/>
            <split id="_split1" parallelProcessing="true" streaming="true">
                <tokenize token="object" xml="true"/>
                <to id="_to1" uri="xquery:myTransform.xquery"/>
                <to id="_to2" uri="amqp:queue:museum-items?connectionFactory=#pooledJmsConnectionFactory"/>
                <!-- once batch is complete, let's log the # of processed records -->
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${property.CamelSplitComplete}</simple>
                        <setHeader headerName="CamelSplitSize" id="_setHeader1">
                            <simple>${property.CamelSplitSize}</simple>
                        </setHeader>
                        <to id="_to3" uri="seda:logBatchCompleted"/>
                    </when>
                </choice>
            </split>
        </route>
        <!-- Splitter EIP with streaming doesn't store CamelSplitSize, so we need an async route to log completion and # of records -->
        <route id="log-batch-completion">
            <from id="_from2" uri="seda:logBatchCompleted"/>
            <log id="_log2" message="Processing of ${header.CamelFileName} was successfully completed. Total # of records: [${header.CamelSplitSize}]"/>
        </route>
    </camelContext>
</beans>

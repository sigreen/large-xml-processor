<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <!-- lets parse files, transform them with XQuery and send them to JMS -->
      <route>
        <from uri="file:src/data?noop=true"/>
        <log message="Transforming input file ${header.CamelFileName}"/>
        <split streaming="true" parallelProcessing="true">
          <tokenize token="object" xml="true"/>
          <to uri="xquery:myTransform.xquery"/>
          <to uri="amqp:queue:museum-items?connectionFactory=#pooledJmsConnectionFactory"/>
          <!-- once batch is complete, let's log the # of processed records -->
          <choice>
            <when>
              <simple>${property.CamelSplitComplete}</simple>
              <setHeader headerName="CamelSplitSize">
                <simple>${property.CamelSplitSize}</simple>
              </setHeader>
              <to uri="seda:logBatchCompleted"/>
            </when>
          </choice>
          </split>
      </route>
      <!-- Splitter EIP with streaming doesn't store CamelSplitSize, so we need an async route to log completion and # of records -->
      <route>
        <from uri="seda:logBatchCompleted"/>
        <log message="Processing of ${header.CamelFileName} was successfully completed. Total # of records: [${header.CamelSplitSize}]"/>
      </route>
    </camelContext>
</beans>